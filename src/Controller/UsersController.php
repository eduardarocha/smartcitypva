<?php

namespace App\Controller;

use App\Controller\AppController;

class UsersController extends AppController
{
    public function initialize(): void
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function login() {
        $autenticacaos = $this->fetchTable('Autenticacaos');
        $resultado = null;
        $statusCode = 200;

        $this->loadComponent('Authentication.Authentication');
        $this->Authentication->logout();
        $this->request->allowMethod(['get', 'post']);
        $result = $this->Authentication->getResult();
        if ($result->isValid()) {
            $length = 40;
            $random = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyz,./?;:\|][{}+=_-)(*&%$#@!ABCDEFGHIJKLMNOPQRSTUVWXYZ'),1,$length);
            $dados = $result->getData();
            $salvar['hash'] = hash('sha512', date('Y-m-d H:i:s') . $dados['nome'] . $random);
            $salvar['expira'] = date('Y-m-d', strtotime('+ 400 days'));
            $salvar['user_id'] = $dados['id'];

            try {
                if (empty($autenticacaos->find()->where(['user_id' => $dados['id']])->toArray())) {
                    $autenticacao = $autenticacaos->newEmptyEntity();
                } else {
                    $autenticacao = $autenticacaos->get($dados['id']);
                }
                $autenticacao = $autenticacaos->patchEntity($autenticacao, $salvar);
                $autenticacaos->saveOrFail($autenticacao);
            } catch (\Exception $e) {
                $resultado['msg'] = $e->getMessage();
                $statusCode = 500;
            }
        } else {
            $statusCode = 400;
        }

        return $this->response
            ->withHeader('Access-Control-Allow-Origin', '*')
            ->withStatus($statusCode)
            ->withType("application/json")
            ->withStringBody(json_encode($resultado));
    }

    public function logout()
    {
        $this->Authentication->logout();
        return $this->redirect(['controller' => 'Users', 'action' => 'login']);
    }

    public function addusers() {
        $users = $this->fetchTable('Users');
        $resultado = null;
        $statusCode = 200;

        $user = $users->newEmptyEntity();
        $user = $users->patchEntity($user, $this->request->getData());

        try {
            $users->saveOrFail($user);
            $resultado = 'UsuÃ¡rio cadastrado com sucesso!';
        } catch (\Exception $e) {
            $resultado = $e->getMessage();
            $statusCode = 500;
        }

        return $this->response
            ->withHeader('Access-Control-Allow-Origin', '*')
            ->withStatus($statusCode)
            ->withType("application/json")
            ->withStringBody(json_encode($resultado));
    }
}
